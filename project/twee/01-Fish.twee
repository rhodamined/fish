:: 01-Fish
<div id="header-include"><<include "00-Header">></div>
<<script>>
(function generate() {

  // fish object: see fish.js
  let fish = window.getFish(1);
  State.variables.healing_val = fish.healingVal;
  console.log(fish.healingVal);
  console.log(fish);
  console.log("ip: " + State.variables.ip);
  State.variables.fishtype = fish.getType;

  // add the government names (specific species)
  let fishnames = [fish.species];
  if (fish.getVarieties.length > 0) {
    for (const e of fish.getVarieties) {
      let gov_name = e + " " + fish.species;
      fishnames.push(gov_name);
    }
  }

  // tracery template for fish description
  let sourceFish = {
    "origin": "You reel in #adjective.a# #size#-inch #fishtype# with #number# eyes and #number2# fins. \n\nIt #confidence# #fish.a#.",
    "fishtype": [fish.getType],
    "size": [fish.getRandomSize.toString()],
    "number": ["no", "two", "two", "two", "two", "two", "three", "four", "five", "an acceptable number of"],
    "number2": ["no", "two", "three", "four", "five", "six", "eight"],
    "confidence": [window.getConfidence(State.variables.ip)],
    "adjective": fish.getDescriptors,
    "fish": fishnames
    }
  let grammar = tracery.createGrammar(sourceFish);
  let fishtext = grammar.flatten("#origin#");
  console.log("fish: " + fishtext);

  // add to game state
  State.variables.fish = fishtext;


  // create text for fish begging for its life
  State.variables.change_location = false;
  State.variables.told_secret = false;

  // process tags for special text options
  let barter = window.getBarter();
  if (barter.charAt(0) == 'x') {  // x denotes 'follow fish'
    barter = barter.slice(1);
    State.variables.change_location = true;
  } else if (barter.charAt(0) == 's') { // s denotes 'secret'
    barter = barter.slice(1);
    State.variables.told_secret = true;
  }

  // tracery template but the randomness happens before.. hm
  let sourcePleading = {
    "origin": "\"Please don't hurt me,\" it cries, \"I'm #reason#. If you let me go, #barter#.\"",
    "reason": [window.getExcuse()],
    "barter": [barter]
  }

  grammar = tracery.createGrammar(sourcePleading);
  let plea = grammar.flatten("#origin#");


  console.log(plea);
  State.variables.plea = plea;
})();
<</script>>\
\
$fish

$plea


You can [[eat this.->00-Eat-It]]
<<if $change_location is true>><<include "00-Option-Follow-Fish">><br><</if>>\
<<include "00-Option-Cast-Line">>